{"version":3,"sources":["../../src/utils/util.ts","../../src/hooks/useFunctionalProps.ts","App.tsx","../../src/hoc/withMemo.tsx","index.tsx"],"names":["isFunction","val","useFunctionalProps","props","functionalPropsRef","React","obj","isPresent","Object","key","extractFunctionalProps","delegateFunction","context","args","ChildComponent","getCounter","counter","useState","parentCounter","setParentCounter","ref","useRef","current","onClick","MemoChildComponent","component","propsAreEqual","MemoComponent","memoFunctionalProps","withMemo","ParentComponent","setCounter","useCallback","console","log","useEffect","intervalId","setInterval","prevState","clearInterval","Fragment","className","App","ReactDOM","render","document","getElementById"],"mappings":"+MAEgBA,EAAWC,GACzB,0BAAcA,E,SCCAC,EAAmBC,GACjC,IAAMC,EAAqBC,iBAA3B,MAmBA,OAlBAD,U,SDIqCD,GACrC,IAAMG,EAAN,GAEA,G,SAPwBL,GACxB,OAAOA,eAAP,IAAuBA,EAMnBM,CAAJ,GACE,cAAkBC,YAAlB,kBAAsC,CAAjC,IAAMC,EAAG,EAAT,GACGR,EAAME,EAAZ,GAEIH,EAAJ,KACEM,QAKN,SCjB6BI,CAA7BN,GAE8C,mBAAc,WAG1D,IAFA,IAAME,EAAN,G,aAEK,IAAMG,EAAG,EAAT,GACHH,KAAW,WACT,IAAMK,EAAmBP,UAAzB,GACA,GAAIJ,EAAJ,GAAkC,KAChC,IAAMY,EAAN,KADgC,mBAFDC,EAEC,yBAFDA,EAEC,gBAEhC,OAAOF,UAAP,MALN,MAAkBH,YAAYJ,EAA9B,wBAA2D,IAU3D,WAbF,ICEF,IAAMU,EAAiB,SAACX,GACtB,IAAQY,EAAeZ,EAAfY,WACFC,EAAUD,IAChB,EAA0CV,IAAMY,SAASD,GAAzD,mBAAOE,EAAP,KAAsBC,EAAtB,KACMC,EAAMf,IAAMgB,QAAgB,GAClCD,EAAIE,UAMJ,OACE,yCACYN,EACV,gDAAsBE,GACtB,0CAAgBE,EAAIE,QAApB,UACA,6BACE,4BAAQC,QAAS,WATrBJ,EAAiBJ,OASb,2BAQFS,E,SC/BJC,EACAC,GAKA,IAAMC,EAAgBtB,iBAAtB,GAEA,OAAO,YACL,IAAMuB,EAAsB1B,EAA5B,GAEA,OAAOG,2CAAmBF,EAA1B,KDoBuB0B,CAASf,GAE9BgB,EAAkB,WACtB,MAA8BzB,IAAMY,SAAS,GAA7C,mBAAOD,EAAP,KAAgBe,EAAhB,KAEMhB,EAAaV,IAAM2B,aAAY,WAEnC,OADAC,QAAQC,IAAR,2BAAgClB,IACzBA,IACN,CAACA,IAYJ,OAVAX,IAAM8B,WAAU,WACd,IAAMC,EAAaC,aAAY,WAC7BN,GAAW,SAACO,GAAD,OAAeA,EAAY,OACrC,KAEH,OAAO,WACLC,cAAcH,MAEf,IAGD,kBAAC,IAAMI,SAAP,KACE,yBAAKC,UAAW,SACd,yBAAKA,UAAW,SAAhB,mBACA,kBAAC,EAAD,CAAgB1B,WAAYA,KAE9B,6BACA,yBAAK0B,UAAW,SACd,yBAAKA,UAAW,SAAhB,wBACA,kBAACjB,EAAD,CAAoBT,WAAYA,OAUzB2B,EAJH,WACV,OAAO,kBAAC,EAAD,OEjETC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.ad2385ec.chunk.js","sourcesContent":["import { FunctionalObject } from '../types/types'\r\n\r\nexport function isFunction(val: any): val is Function {\r\n  return typeof val === 'function'\r\n}\r\n\r\nexport function isPresent(val: any | null | undefined): val is any {\r\n  return val !== null && val !== undefined\r\n}\r\n\r\nexport function extractFunctionalProps(props: any): FunctionalObject {\r\n  const obj: FunctionalObject = {}\r\n\r\n  if (isPresent(props)) {\r\n    for (const key of Object.keys(props)) {\r\n      const val = props[key]\r\n\r\n      if (isFunction(val)) {\r\n        obj[key] = val\r\n      }\r\n    }\r\n  }\r\n\r\n  return obj\r\n}\r\n","import * as React from 'react'\r\nimport { FunctionalObject } from '../types/types'\r\nimport { extractFunctionalProps, isFunction } from '../utils/util'\r\n\r\nexport function useFunctionalProps(props: any): FunctionalObject {\r\n  const functionalPropsRef = React.useRef<any>(null)\r\n  functionalPropsRef.current = extractFunctionalProps(props)\r\n\r\n  const memoFunctionalProps: FunctionalObject = React.useMemo(() => {\r\n    const obj: FunctionalObject = {}\r\n\r\n    for (const key of Object.keys(functionalPropsRef.current)) {\r\n      obj[key] = function (this: any, ...args: any[]) {\r\n        const delegateFunction = functionalPropsRef.current[key]\r\n        if (isFunction(delegateFunction)) {\r\n          const context = this\r\n          return delegateFunction.apply(context, args)\r\n        }\r\n      }\r\n    }\r\n\r\n    return obj\r\n  }, [])\r\n\r\n  return memoFunctionalProps\r\n}\r\n","import React from 'react'\n\nimport { withMemo } from 'react-enhance-memo'\n\nimport './index.css'\n\ntype ChildProps = {\n  getCounter: () => void\n}\n\nconst ChildComponent = (props: ChildProps) => {\n  const { getCounter } = props\n  const counter = getCounter()\n  const [parentCounter, setParentCounter] = React.useState(counter)\n  const ref = React.useRef<number>(-1)\n  ref.current++\n\n  const checkParentCounter = () => {\n    setParentCounter(getCounter())\n  }\n\n  return (\n    <div>\n      Counter: {counter}\n      <div>Parent counter: {parentCounter}</div>\n      <div>Rendered: {ref.current} times</div>\n      <div>\n        <button onClick={() => checkParentCounter()}>\n          Check parent counter\n        </button>\n      </div>\n    </div>\n  )\n}\n\nconst MemoChildComponent = withMemo(ChildComponent)\n\nconst ParentComponent = () => {\n  const [counter, setCounter] = React.useState(0)\n\n  const getCounter = React.useCallback(() => {\n    console.log(`Current counter: ${counter}`)\n    return counter\n  }, [counter])\n\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCounter((prevState) => prevState + 1)\n    }, 1000)\n\n    return () => {\n      clearInterval(intervalId)\n    }\n  }, [])\n\n  return (\n    <React.Fragment>\n      <div className={'child'}>\n        <div className={'title'}>Child component</div>\n        <ChildComponent getCounter={getCounter} />\n      </div>\n      <hr />\n      <div className={'child'}>\n        <div className={'title'}>Memo child component</div>\n        <MemoChildComponent getCounter={getCounter} />\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst App = () => {\n  return <ParentComponent />\n}\n\nexport default App\n","import * as React from 'react'\r\nimport { useFunctionalProps } from '../hooks/useFunctionalProps'\r\n\r\nexport function withMemo<T extends React.ComponentType<any>>(\r\n  component: T,\r\n  propsAreEqual?: (\r\n    prevProps: Readonly<React.ComponentProps<T>>,\r\n    nextProps: Readonly<React.ComponentProps<T>>\r\n  ) => boolean\r\n) {\r\n  const MemoComponent = React.memo(component, propsAreEqual)\r\n\r\n  return (props: any) => {\r\n    const memoFunctionalProps = useFunctionalProps(props)\r\n\r\n    return <MemoComponent {...props} {...memoFunctionalProps} />\r\n  }\r\n}\r\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}